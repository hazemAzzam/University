{
	"info": {
		"_postman_id": "15156f4d-1b0c-403a-9fbc-0a90cf379bce",
		"name": "University",
		"description": "StartFragment\n\nThe UNIVERSITY database keeps track of students and their majors, transcripts, and registration, as well as the university's course offerings. It also tracks the sponsored research projects of faculty and graduate students.\n\nthe flow of the enpoints should be as follows\n\n1. create a colleges that will be present in the college\n2. for each college create the departments (each department must have a chairs who oversees that department, but since we didn't create faculities yet, we will leave it null for now, and use update endpoint to set the chairs)\n3. create faculities for each college\n4. create students for each college (the major and the minor are the departments for which the student will be registered at)\n5. create courses for each department\n6. for each course create sections\n7. now student can be able to register courses, the courses at the current year and current qtr will be available to student to be registered, so that every year the new sections that will be taught must be added with the current year and current qtr\n8. the transcript is the complete section of the students, to add course to the transcript, the student first must have registered it.\n9. the student level or information can be updated from student/update end point, but you cannot directly update student to level 5 or 6 since it will be cosidered as grad student and it requires more information, so\n10. grad student end point will allow us to pick the students at level 4 to level up then to level 5, when adding student from lvl 4 to grad student, its level will be automatically changed to level 5, student of level less than 4 will not be allowed to be added to grad students untill that level 4 or 5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26275557",
		"_collection_link": "https://www.postman.com/lively-trinity-888959/workspace/medical-convoy/collection/26275557-15156f4d-1b0c-403a-9fbc-0a90cf379bce?action=share&creator=26275557&source=collection_link"
	},
	"item": [
		{
			"name": "College",
			"item": [
				{
					"name": "list colleges",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/colleges/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"colleges",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create college",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"college_name\": \"{{$randomDomainName}}\",\r\n    \"dean\": \"{{$randomFullName}}\",\r\n    \"college_office\": \"{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/colleges/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"colleges",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Department",
			"item": [
				{
					"name": "list departments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/departments/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"departments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create department",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomDepartment}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\",\r\n    \"office\": \"{{$randomInt}}\",\r\n    \"college\": \"{{randomCollege}}\",\r\n    \"chairs\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/departments/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"departments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update department",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"chairs\": \"599120214\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/departments/Books/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"departments",
								"Books",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Faculty",
			"item": [
				{
					"name": "list faculities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/faculities/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"faculities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create faculity",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ssn\": \"{{randomSSN}}\",\r\n    \"fname\": \"{{$randomFirstName}}\",\r\n    \"minit\": \"{{$randomFirstName}}\",\r\n    \"lname\": \"{{$randomLastName}}\",\r\n    \"address\": {\r\n        \"no\": \"{{$randomInt}}\",\r\n        \"street\": \"{{$randomStreetAddress}}\",\r\n        \"apt_no\": \"{{$randomInt}}\",\r\n        \"city\": \"{{$randomCity}}\",\r\n        \"state\": \"{{randomState}}\",\r\n        \"zip\": \"{{randomZipCode}}\"\r\n    },\r\n    \"birth_date\": \"{{randomDate}}\",\r\n    \"sex\": \"{{randomGender}}\",\r\n    \"rank\": \"{{randomNumber}}\",\r\n    \"f_office\": \"{{$randomInt}}\",\r\n    \"f_phone\": \"{{$randomPhoneNumber}}\",\r\n    \"salary\": \"{{randomSalary}}\",\r\n    \"departments\": {{randomDepartments}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/faculities/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"faculities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delete faculty",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/faculities/710359178/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"faculities",
								"710359178",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Student",
			"item": [
				{
					"name": "list students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/students/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create student",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ssn\": \"{{randomSSN}}\",\r\n    \"fname\": \"{{$randomFirstName}}\",\r\n    \"minit\": \"{{$randomFirstName}}\",\r\n    \"lname\": \"{{$randomLastName}}\",\r\n    \"address\": {\r\n        \"no\": \"{{$randomInt}}\",\r\n        \"street\": \"{{$randomStreetAddress}}\",\r\n        \"apt_no\": \"{{$randomInt}}\",\r\n        \"city\": \"{{$randomCity}}\",\r\n        \"state\": \"{{randomState}}\",\r\n        \"zip\": \"{{randomZipCode}}\"\r\n    },\r\n    \"birth_date\": \"{{randomDate}}\",\r\n    \"sex\": \"{{randomGender}}\",\r\n    \"level\": \"{{randomNumber}}\",\r\n    \"minor\": \"{{randomDepartment}}\",\r\n    \"major\": \"{{randomDepartment}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/students/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Grad Student",
			"item": [
				{
					"name": "list grade students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/grade_students/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grade_students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "make student grade",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"student\": \"103707715\",\r\n    \"collage\": \"Science\",\r\n    \"degree\": 3.6,\r\n    \"year\": 2023,\r\n    \"advisor\": \"402390463\",\r\n    \"committee\": [\"402390463\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/grade_students/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grade_students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "increase_level",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/grade_students/100405839/increase_level/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grade_students",
								"100405839",
								"increase_level",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "decrease_level",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/grade_students/197713381/decrease_level/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grade_students",
								"197713381",
								"decrease_level",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update grad student",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"collage\": \"Science\",\r\n    \"degree\": 3.6,\r\n    \"year\": 2023,\r\n    \"advisor\": \"599120214\",\r\n    \"committee\": [\"599120214\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/grade_students/100405839/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grade_students",
								"100405839",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "list courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/courses/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"courses",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create course",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"course_number\": \"{{$randomInt}}\",\r\n    \"course_name\": \"{{$randomVerb}}\",\r\n    \"course_desc\": \"{{$randomLoremSentence}}\",\r\n    \"department\": \"{{randomDepartment}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/courses/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"courses",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sections",
			"item": [
				{
					"name": "list sections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/sections/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"sections",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create section",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\": \"{{$randomInt}}\",\r\n    \"year\": 2023,\r\n    \"qtr\": \"{{randomQtr}}\",\r\n    \"course\": \"{{randomCourse}}\",\r\n    \"instructor_researcher\": \"{{randomInstructor}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/sections/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"sections",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instructor Research",
			"item": [
				{
					"name": "list instructor researchers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/instructor-researchers/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"instructor-researchers",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Grant",
			"item": [
				{
					"name": "create grant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomLoremText}}\",\r\n    \"agency\": \"{{$randomNoun}}\",\r\n    \"start_date\": \"{{randomDate}}\",\r\n    \"faculty\": \"{{randomInstructor}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/grants/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grants",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "list grand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/grants/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"grants",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supports",
			"item": [
				{
					"name": "add support to grant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"start\": \"{{randomDate}}\",\r\n    \"end\": \"{{randomDate}}\",\r\n    \"time\": \"{{$randomInt}}\",\r\n    \"grand\": 1,\r\n    \"instructor_researcher\": \"188861520\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/supports/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"supports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "list support of some grant",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/supports/?grant=1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"supports",
								""
							],
							"query": [
								{
									"key": "grant",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transcript",
			"item": []
		},
		{
			"name": "Courses Registeration",
			"item": [
				{
					"name": "list registerations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/course-registerations/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"course-registerations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "register a course",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"section\": null,\r\n    \"student\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/course-registerations/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"course-registerations",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// GENERATE RANDOM SSN  Number",
					"function ranomeSSN(){",
					"    return ssn_random = Math.floor(Math.random()*8+1)+Math.random().toString().slice(2,10);",
					"}",
					"pm.environment.set(\"randomSSN\", pm.variables.replaceIn(ranomeSSN()));",
					"",
					"function randomState(){",
					"    const states = [\"New York\", \"California\", \"Texas\", \"Florida\", \"Washington\"];",
					"    const randomState = states[Math.floor(Math.random() * states.length)];",
					"    return randomState;",
					"}",
					"pm.environment.set(\"randomState\", randomState());",
					"",
					"",
					"function generateRandomZipCode() {",
					"    const min = 10000; // Minimum ZIP code value",
					"    const max = 99999; // Maximum ZIP code value",
					"    const randomZipCode = Math.floor(Math.random() * (max - min + 1)) + min;",
					"    return randomZipCode.toString().padStart(5, '0'); // Pad with leading zeros if necessary",
					"}",
					"",
					"pm.environment.set(\"randomZipCode\", generateRandomZipCode());",
					"",
					"function randomGender(){",
					"    const genders = [\"Male\", \"Female\"];",
					"    const randomGender = genders[Math.floor(Math.random() * genders.length)];",
					"    return randomGender;",
					"}",
					"pm.environment.set(\"randomGender\", randomGender());",
					"",
					"function generateRandomDate() {",
					"    const start = new Date(1970, 0, 1); // Start date (e.g., January 1, 1970)",
					"    const end = new Date(); // Current date (or any other desired end date)",
					"    const randomTimestamp = start.getTime() + Math.random() * (end.getTime() - start.getTime());",
					"    const randomDate = new Date(randomTimestamp);",
					"    const year = randomDate.getFullYear();",
					"    const month = String(randomDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so we add 1 and pad with leading zero if necessary",
					"    const day = String(randomDate.getDate()).padStart(2, '0'); // Pad with leading zero if necessary",
					"",
					"    return `${year}-${month}-${day}`;",
					"}",
					"",
					"const randomDate = generateRandomDate();",
					"pm.environment.set(\"randomDate\", randomDate);",
					"",
					"",
					"const randomNum = Math.floor(Math.random() * 4) + 1;",
					"pm.environment.set(\"randomNumber\", randomNum.toString());",
					"",
					"",
					"function generateRandomSalary() {",
					"    const minSalary = 1000; // Minimum salary value",
					"    const maxSalary = 10000; // Maximum salary value",
					"    const randomSalary = Math.floor(Math.random() * (maxSalary - minSalary + 1)) + minSalary;",
					"    return randomSalary;",
					"}",
					"",
					"const randomSalary = generateRandomSalary();",
					"pm.environment.set(\"randomSalary\", randomSalary.toString());",
					"",
					"function randomQtr(){",
					"    const qtrs = [\"Fall\", \"Summer\", \"Winter\", \"Spring\"]",
					"    randomQtr = qtrs[Math.floor(Math.random() * qtrs.length)]",
					"    return randomQtr;",
					"}",
					"pm.environment.set(\"randomQtr\", randomQtr())",
					"",
					"",
					"/*",
					"    Get all colleges name",
					" */",
					"function getRandomCollege() {",
					"  return new Promise((resolve, reject) => {",
					"    pm.sendRequest({",
					"      url: 'http://127.0.0.1:8000/colleges/',",
					"      method: 'GET'",
					"    }, (err, response) => {",
					"      if (err) {",
					"        console.error(err);",
					"        reject(err);",
					"      } else {",
					"        var colleges = response.json();",
					"        var collegeNames = colleges.map(college => college.college_name);",
					"        var randomCollege = collegeNames[Math.floor(Math.random() * collegeNames.length)];",
					"        resolve(randomCollege);",
					"      }",
					"    });",
					"  });",
					"}",
					"",
					"getRandomCollege()",
					"  .then(randomCollegeName => {",
					"    console.log(randomCollegeName);",
					"    pm.environment.set('randomCollege', randomCollegeName.toString());",
					"  })",
					"  .catch(error => {",
					"    console.error(error);",
					"  });",
					"",
					"function getRandomDepartments() {",
					"  return new Promise((resolve, reject) => {",
					"    pm.sendRequest({",
					"      url: 'http://127.0.0.1:8000/departments/',",
					"      method: 'GET'",
					"    }, (err, response) => {",
					"      if (err) {",
					"        console.error(err);",
					"        reject(err);",
					"      } else {",
					"        var departments = response.json();",
					"        var departmentNames = departments.map(department => department.name);",
					"        var randomLength = Math.floor(Math.random() * departmentNames.length) + 1;",
					"        var randomDepartments = [];",
					"",
					"        for (var i = 0; i < randomLength; i++) {",
					"          var randomIndex = Math.floor(Math.random() * departmentNames.length);",
					"          randomDepartments.push(departmentNames[randomIndex]);",
					"          departmentNames.splice(randomIndex, 1);",
					"        }",
					"",
					"        resolve(randomDepartments);",
					"      }",
					"    });",
					"  });",
					"}",
					"",
					"getRandomDepartments()",
					"  .then(randomDepartments => {",
					"    pm.environment.set('randomDepartments', JSON.stringify(randomDepartments));",
					"  })",
					"  .catch(error => {",
					"    console.error(error);",
					"  });",
					"",
					"function randomDepartment() {",
					"  return new Promise((resolve, reject) => {",
					"    pm.sendRequest({",
					"      url: 'http://127.0.0.1:8000/departments/',",
					"      method: 'GET'",
					"    }, function (err, response) {",
					"      if (err) {",
					"        console.error(err);",
					"        reject(err);",
					"      } else {",
					"        var departments = response.json();",
					"        var departmentNames = departments.map(function (department) {",
					"          return department.name;",
					"        });",
					"",
					"        // Create an empty array to store the randomly selected departments",
					"        var randomDepartment = departmentNames[Math.floor(Math.random() * departmentNames.length)];",
					"        resolve(randomDepartment);",
					"      }",
					"    });",
					"  });",
					"}",
					"",
					"randomDepartment()",
					"  .then(randomDept => {",
					"    pm.environment.set('randomDepartment', randomDept);",
					"  })",
					"  .catch(error => {",
					"    console.error(error);",
					"  });",
					"",
					"function randomCourse(){",
					"    pm.sendRequest({",
					"      url: 'http://127.0.0.1:8000/courses/',",
					"      method: 'GET'",
					"    }, function (err, response) {",
					"      if (err) {",
					"        console.error(err);",
					"      } else {",
					"        var courses = response.json();",
					"        var coursesNumber = courses.map(function(course) {",
					"          return course.course_number;",
					"        });",
					"",
					"        var randomCourse =  coursesNumber[Math.floor(Math.random() * coursesNumber.length)];",
					"        return randomCourse",
					"        ",
					"      }",
					"    });",
					"}",
					"pm.environment.set('randomCourse', randomCourse());",
					"",
					"function randomCourse() {",
					"  return new Promise((resolve, reject) => {",
					"    pm.sendRequest({",
					"      url: 'http://127.0.0.1:8000/courses/',",
					"      method: 'GET'",
					"    }, function (err, response) {",
					"      if (err) {",
					"        console.error(err);",
					"        reject(err);",
					"      } else {",
					"        var courses = response.json();",
					"        var coursesNumber = courses.map(function(course) {",
					"          return course.course_number;",
					"        });",
					"",
					"        var randomCourse = coursesNumber[Math.floor(Math.random() * coursesNumber.length)];",
					"        resolve(randomCourse);",
					"      }",
					"    });",
					"  });",
					"}",
					"",
					"randomCourse()",
					"  .then(randomCrse => {",
					"    pm.environment.set('randomCourse', randomCrse);",
					"  })",
					"  .catch(error => {",
					"    console.error(error);",
					"  });",
					"",
					"",
					"function randomInstructor() {",
					"  return new Promise((resolve, reject) => {",
					"    pm.sendRequest({",
					"      url: 'http://127.0.0.1:8000/instructor-researchers/',",
					"      method: 'GET'",
					"    }, function (err, response) {",
					"      if (err) {",
					"        console.error(err);",
					"        reject(err);",
					"      } else {",
					"        var jsonData = response.json();",
					"        var dataAttributes = jsonData.map(function(data) {",
					"          return data.instructor_ssn;",
					"        });",
					"",
					"        var randomData = dataAttributes[Math.floor(Math.random() * dataAttributes.length)];",
					"        resolve(randomData);",
					"      }",
					"    });",
					"  });",
					"}",
					"",
					"randomInstructor()",
					"  .then(randomInstr => {",
					"    pm.environment.set('randomInstructor', randomInstr);",
					"  })",
					"  .catch(error => {",
					"    console.error(error);",
					"  });",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}